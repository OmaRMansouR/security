import { ElementRef, AfterViewInit, OnDestroy, ModuleWithProviders } from '@angular/core';
import { NgModelBase } from './utils';
import * as SimpleMDE from 'simplemde';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
import * as ɵngcc2 from '@angular/common';
export declare class Simplemde extends NgModelBase implements AfterViewInit, OnDestroy {
    private config;
    textarea: ElementRef;
    options: SimpleMDE.Options;
    codemirror: any;
    private simplemde;
    private tmpValue;
    writeValue(v: any): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    constructor(config: any);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<Simplemde, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<Simplemde, "simplemde", never, { "options": "options"; "codemirror": "codemirror"; }, {}, never, never>;
}
export declare class SimplemdeModule {
    static forRoot(configProvider?: any): ModuleWithProviders<SimplemdeModule>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<SimplemdeModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<SimplemdeModule, [typeof Simplemde], [typeof ɵngcc1.FormsModule, typeof ɵngcc2.CommonModule], [typeof Simplemde, typeof ɵngcc1.FormsModule, typeof ɵngcc2.CommonModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<SimplemdeModule>;
}

//# sourceMappingURL=component.d.ts.map